import { gql } from "@apollo/client";
import client from "../../../apollo-client";

export const getStaticPaths = async () => {
  const { data } = await client.query({
    query: gql`
      query CategoryList {
        categories {
          id
        }
      }
    `,
  });
  const paths = data.categories.map((e) => ({
    params: {
      id: e.id.toString(),
    },
  }));

  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps = async ({ params }) => {
  const { data } = await client.query({
    query: gql`
      query ItemsByCategory${params.id} {
        categories_by_pk(id: ${params.id}) {
          name
          items {
            id
            name
            height
            width
            price
          }
        }
      }
    `,
  });

  return {
    props: {
      category: data.categories_by_pk.name,
      items: data.categories_by_pk.items,
    },
  };
};

import { useState } from "react";
import Head from "next/head";
import Link from "next/link";

import {
  Container,
  ContentContainer,
  SectionTitle,
  Item,
  BackBtn,
  Icon,
} from "../../../styles/catalog";

import dynamic from "next/dynamic";
const ItemModal = dynamic(() => import("../../../modules/catalog/ItemModal"));
const ItemDetails = dynamic(() =>
  import("../../../modules/catalog/ItemDetails")
);

const CategoryDetail = ({ category, items }) => {
  // modal
  const [modal, setModal] = useState(false);

  const closeModal = () => setModal(false);

  return (
    <>
      <Head>
        <title>{category} - Категории - Decolight</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Container>
        <SectionTitle>{category}</SectionTitle>
        <Link href="/catalog" passHref>
          <BackBtn>
            <Icon.Back /> Обратно в категории
          </BackBtn>
        </Link>
        <ContentContainer>
          {items.map((e, inx) => (
            <Item.Box key={inx} onClick={() => setModal(e)}>
              <Item.Picture
                src={`/items/image/${e.id}.jpg`}
                width={250}
                height={150}
              />
              <ItemDetails elem={e} />
            </Item.Box>
          ))}
          <ItemModal item={modal} close={closeModal} />
        </ContentContainer>
      </Container>
    </>
  );
};

export default CategoryDetail;
